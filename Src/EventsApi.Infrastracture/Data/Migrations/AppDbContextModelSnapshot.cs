// <auto-generated />
using System;
using EventsApi.Infrastracture.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventsApi.Infrastracture.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("EventsApi.Core.Entities.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TalkId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TalkId");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("EventsApi.Core.Entities.Talk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ScheduledDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Talks");
                });

            modelBuilder.Entity("EventsApi.Core.Entities.Speaker", b =>
                {
                    b.HasOne("EventsApi.Core.Entities.Talk", null)
                        .WithMany("Speakers")
                        .HasForeignKey("TalkId");
                });
#pragma warning restore 612, 618
        }
    }
}
